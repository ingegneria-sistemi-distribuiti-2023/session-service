version: '3.7'

services:
  session-redis-store:
    build:
      context: ./redis
      dockerfile: Dockerfile
    volumes:
      - redis_data:/data
    environment:
      - save=3600 1 300 100 60 10000
      - loglevel=verbose
      - port=6379
    container_name: session-redis-store
    networks:
      - redis-network

  session-service:
    build:
      context: .
      dockerfile: Dockerfile
    # depends_on: # TODO: this will not be managed by docker-compose if db and service are in different stacks
    #   session_db:
    #     condition: service_healthy
    # image: session-service:latest
    restart: unless-stopped
    ports:
      - 8084:8084
    environment:
      REDIS_PORT: 6379
      REDIS_HOST: session-redis-store
      JDBC_DATABASE_URL: jdbc:mysql://session-db:3306/sessiondb?allowPublicKeyRetrieval=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC
      JDBC_DATABASE_PASSWORD: admin
      JDBC_DATABASE_USERNAME: admin
    networks:
      - session-network
      - session-db-network
      - redis-network
    volumes:
      - maven_packages:/root/.m2
    container_name: session-service

networks: 
  session-network:
    name: session-network
  session-db-network:
    name: session-db-network
  redis-network:
    name: redis-network


volumes:
  maven_packages:
    name: maven_packages
  redis_data:
    name: redis_data